steps:
  - script: |
      conda config --set always_yes yes --set changeps1 no
      conda update -q conda
      conda create -n xsimd
      source activate xsimd
      if [[ $(enable_xtl_complex) == 1 ]]; then
        conda install xtl -c conda-forge
      fi
      if [[ $(avx512) == 1 ]]; then
        conda install gcc_linux-64 gxx_linux-64;
        sh $(Build.SourcesDirectory)/install_sde.sh;
      fi
    displayName: Install dependencies
    workingDirectory: $(Build.BinariesDirectory)


  - script: |
      source activate xsimd
      mkdir build
      cd build
      if [[ $(cross_compile) == 1 ]]; then
        if [[ $(arm_arch_dir) == 'aarch64-linux-gnu' ]]; then
          CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DCROSS_COMPILE_ARM=ON -DARM_ARCH_DIRECTORY=$(arm_arch_dir) -DARM_GCC_VER=4.9.3 -DTARGET_ARCH=$(arm_arch_target) -DCMAKE_LINKER=/usr/bin/aarch64-linux-gnu-ld";
        else
          CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DCROSS_COMPILE_ARM=ON -DARM_ARCH_DIRECTORY=$(arm_arch_dir) -DARM_GCC_VER=4.9.3 -DTARGET_ARCH=$(arm_arch_target)";
        fi
      fi
      if [[ $(enable_xtl_complex) == 1 ]]; then
        CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DENABLE_XTL_COMPLEX=ON";
      fi
      if [[ $(enable_fallback) == 1 ]]; then
        CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DENABLE_FALLBACK=ON";
      fi
      if [[ $(avx512) == 1 ]]; then
        CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DTARGET_ARCH=skylake-avx512";
      fi
      if [[ $(force_no_instr_set) == 1 ]]; then
        CMAKE_EXTRA_ARGS="$CMAKE_EXTRA_ARGS -DXSIMD_FORCE_X86_INSTR_SET=0 -DXSIMD_FORCE_X86_AMD_INSTR_SET=0";
      fi

      cmake -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX $CMAKE_EXTRA_ARGS -DDOWNLOAD_GTEST=ON $(Build.SourcesDirectory)
    displayName: Configure xsimd
    workingDirectory: $(Build.BinariesDirectory)

  - script: |
      source activate xsimd
      make -j2 test_xsimd
    displayName: Build xsimd
    workingDirectory: $(Build.BinariesDirectory)/build

  - script: |
      source activate xsimd
      if [[ $(avx512) == 1 ]]; then
        ../../sde-external-8.56.0-2020-07-05-lin/sde64 -skx -- ./test_xsimd ;
      elif [[ $(cross_compile) == 1 ]]; then
        echo $(arm_arch_dir);
        if [[ $(arm_arch_dir) == 'aarch64-linux-gnu' ]]; then
          ls /usr/aarch64-linux-gnu/ ;
          qemu-aarch64 -L /usr/aarch64-linux-gnu/ ./test_xsimd ;
        else
          qemu-arm -L /usr/arm-linux-gnueabi/ ./test_xsimd ;
        fi
      else
        ./test_xsimd
      fi
    displayName: Test xsimd
    workingDirectory: $(Build.BinariesDirectory)/build/test
