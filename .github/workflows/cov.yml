name: Coverage

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master

  workflow_dispatch:

env:
  WORK_DIR: ${{github.workspace}}/JUCE_modules/chowdsp_utils

jobs:
  build_and_test:
    if: contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Analyze test coverage ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        include:
          - os: ubuntu-latest
            cmake_args: ""
          - os: macos-latest
            cmake_args: "-DXSIMD_PATH=../xsimd"

    steps:
      - name: Install Linux Deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev libsamplerate-dev lcov
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9

      - name: Install MacOS Deps
        if: runner.os == 'MacOS'
        run: |
          export HOMEBREW_NO_AUTO_UPDATE=1
          brew install lcov

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ${{env.WORK_DIR}}

      - name: Set up environment
        working-directory: ${{github.workspace}}
        run: |
          git clone --depth 1 --branch 6.1.2 https://github.com/juce-framework/JUCE.git
          cd JUCE_modules
          git clone --single-branch --branch chowdsp https://github.com/Chowdhury-DSP/foleys_gui_magic.git

      - name: Install xsimd
        if: runner.os == 'MacOS'
        working-directory: ${{github.workspace}}/JUCE_modules
        run: git clone --depth 1 --branch 7.5.0 https://github.com/xtensor-stack/xsimd

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: cov-${{ matrix.os }}

      - name: Configure
        working-directory: ${{env.WORK_DIR}}
        env:
          CMAKE_ARGS: ${{ matrix.cmake_args }}
        shell: bash
        run: cmake -Bbuild -DCODE_COVERAGE=ON -DCHOWDSP_ENABLE_TESTING=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache $CMAKE_ARGS

      - name: Build
        working-directory: ${{env.WORK_DIR}}/build
        shell: bash
        run: cmake --build . --parallel 4

      - name: Test
        uses: GabrielBB/xvfb-action@v1
        with:
          run: ctest -C Debug -V
          working-directory: ${{env.WORK_DIR}}/build

      - name: Collect Coverage Data
        working-directory: ${{env.WORK_DIR}}
        shell: bash
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' '/Applications/Xcode*' '*JUCE/modules*' '*xsimd/include*' '*foleys_*' '*chowdsp_utils/tests*' '*third_party*' --output-file coverage.info

      - name: Report Coverage Data
        working-directory: ${{env.WORK_DIR}}
        shell: bash
        run: lcov --list coverage.info

      - name: Upload Coverage Data
        working-directory: ${{env.WORK_DIR}}
        shell: bash
        run: bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
