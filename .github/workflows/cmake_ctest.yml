name: CI

on:
  push:
    branches:
    - master
    - develop
  pull_request:
    branches:
    - master

  workflow_dispatch:

env:
  WORK_DIR: ${{github.workspace}}/JUCE_modules/chowdsp_utils

jobs:
  build_and_test:
    if: contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Test module on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # show all errors for each platform (vs. cancel jobs on error)
      matrix:
        include:
          - os: ubuntu-latest
            cmake_args: "-DCMAKE_BUILD_TYPE=Release -DXSIMD_PATH=../xsimd"
          - os: windows-latest
            cmake_args: ""
          - os: macos-latest
            cmake_args: "-GXcode -DXSIMD_PATH=../xsimd"
    
    steps:
    - name: Install Linux Deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt install libasound2-dev libcurl4-openssl-dev libx11-dev libxinerama-dev libxext-dev libfreetype6-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev libsamplerate-dev
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9

    - name: Get latest CMake
      uses: lukka/get-cmake@latest 

    - name: Checkout code
      uses: actions/checkout@v2
      with:
        path: ${{env.WORK_DIR}}

    - name: Set up environment
      working-directory: ${{github.workspace}}
      run: |
        git clone --depth 1 --branch 6.0.8 https://github.com/juce-framework/JUCE.git
        cd JUCE_modules
        git clone --single-branch --branch chowdsp https://github.com/Chowdhury-DSP/foleys_gui_magic.git

    - name: Install xsimd
      if: runner.os == 'Linux' || runner.os == 'MacOS'
      working-directory: ${{github.workspace}}/JUCE_modules
      run: git clone --depth 1 --branch 7.5.0 https://github.com/xtensor-stack/xsimd

    - name: Configure
      working-directory: ${{env.WORK_DIR}}
      env:
        CMAKE_ARGS: ${{ matrix.cmake_args }}
      shell: bash
      run: cmake -Bbuild $CMAKE_ARGS

    - name: Build
      working-directory: ${{env.WORK_DIR}}/build
      shell: bash
      run: cmake --build . --config Release --parallel 4

    - name: Test
      uses: GabrielBB/xvfb-action@v1
      with:
        run: ctest -C Release -V
        working-directory: ${{env.WORK_DIR}}/build
